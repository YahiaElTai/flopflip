name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: GitHub context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Checkout
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v3

      - name: Fetch all tags (for releases)
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-v1

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 6.32.3
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            email=nerd@tdeekens.name
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM user
        run: pnpm auth

      - name: Building packages
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
          version: pnpm changeset:version-and-format
          title: 'ci(changesets): version packages'
          commit: 'ci(changesets): version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
